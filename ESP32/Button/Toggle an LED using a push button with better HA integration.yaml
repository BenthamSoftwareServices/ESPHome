esphome:
  name: esp32-s3
  friendly_name: ESP32-S3
  
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG # sets the overall logging level, which if not specified defaults to DEBUG
  logs: 
    component: ERROR # sets the logging level for a specific item, in this case all components

# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case WiFi connection fails
  ap:
    ssid: "workroom"
    password: "robinho0d"

captive_portal:

web_server:
  port: 80

# Display WiFi signal strength
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_signal_strength
    update_interval: 60s    

# Binary sensor for the push button on GPIO5
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    name: "Physical Push Button"
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    on_press:
      - if:
          condition:
            switch.is_on: led_switch
          then:
            - switch.turn_off: led_switch
          else:
            - switch.turn_on: led_switch
  
# LED Status using template
  - platform: template
    name: "LED Status"
    id: led_status
    lambda: |-
      return id(led_switch).state;

# Virtual button for Home Assistant
button:
  - platform: template
    name: "Web Toggle Button"
    on_press:
      - if:
          condition:
            switch.is_on: led_switch
          then:
            - switch.turn_off: led_switch
          else:
            - switch.turn_on: led_switch

# Hidden switch component for LED control on GPIO14
switch:
  - platform: gpio
    pin: GPIO14
    id: led_switch
    internal: true

